from z3 import *

solver = Solver()
x = [BitVec(f'x[{i}]', 64) for i in range(335)]
y = [BitVec(f'y[{i}]', 64) for i in range(335)]


def Pad6Bit(a1):
    a1 &= 0xff
    return (2 * ((4 * (a1 & 0xF)) & 0x33 | (16 * (a1 & 0x3F)) & 0x303 | a1 & 3)) & 0x555 | (4 * (a1 & 0xF)) & 0x11 | (16 * (a1 & 0x3F)) & 0x101 | a1 & 1


def Pad7Bit(a1):
    a1 &= 0xff
    return a1 & 1 | (((a1 & 0x7F) & 0xffffffffffffffff) << 32) & 0x1000000001 | ((a1 & 0xF | (((a1 & 0x7F) & 0xffffffffffffffff) << 32) & 0x700000000F) << 16) & 0x40001000040001 | ((a1 & 3 | (((a1 & 0x7F) & 0xffffffffffffffff) << 32) & 0x3000000003 | ((a1 & 0xF | (((a1 & 0x7F) & 0xffffffffffffffff) << 32) & 0x700000000F) << 16) & 0x400030000C0003) << 8) & 0x40201008040201


def Pad12Bit(a1):
    a1 &= 0xffff
    return a1 & 1 | ((a1 & 0xFFF) << 8) & 0x10001 | (16 * (a1 & 0xff)) & 0x101 | (4 * (a1 & 0xF | ((a1 & 0xFFF) << 8) & 0xF000F | (16 * (a1 & 0xff)) & 0xF0F)) & 0x111111 | (2 * (a1 & 3 | ((a1 & 0xFFF) << 8) & 0x30003 | (16 * (a1 & 0xff)) & 0x303 | (4 * (a1 & 0xF | ((a1 & 0xFFF) << 8) & 0xF000F | (16 * (a1 & 0xff)) & 0xF0F)) & 0x333333)) & 0x555555


def Pad24Bit(a1):
    a1 &= 0xffffffff
    v2 = a1 & 3 | (((a1 & 0xFFFFFF) & 0xffffffffffffffff) << 16) & 0x300000003 | (((a1 & 0xffff) | (((a1 & 0xFFFFFF) & 0xffffffffffffffff) << 16) & 0xFF0000FFFF) << 8) & 0x300030003 | (16 * ((a1 & 0xff) | (((a1 & 0xFFFFFF) & 0xffffffffffffffff) << 16) & 0xFF000000FF | (((a1 & 0xffff) | (((a1 & 0xFFFFFF) & 0xffffffffffffffff) << 16) & 0xFF0000FFFF) << 8) & 0xFF00FF00FF)) & 0x30303030303 | (4 * (a1 &
                                                                                                                                                                                                                                                                                                                                                                                                             0xF | (((a1 & 0xFFFFFF) & 0xffffffffffffffff) << 16) & 0xF0000000F | (((a1 & 0xffff) | (((a1 & 0xFFFFFF) & 0xffffffffffffffff) << 16) & 0xFF0000FFFF) << 8) & 0xF000F000F | (16 * ((a1 & 0xff) | (((a1 & 0xFFFFFF) & 0xffffffffffffffff) << 16) & 0xFF000000FF | (((a1 & 0xffff) | (((a1 & 0xFFFFFF) & 0xffffffffffffffff) << 16) & 0xFF0000FFFF) << 8) & 0xFF00FF00FF)) & 0xF0F0F0F0F0F)) & 0x333333333333
    return (v2 | (2 * v2)) & 0x555555555555

# 1004557E33CE6F0


def Unpad64Bit_8Bit(a1):
    v2 = a1 & 1 | ((a1 & 0x101010101010101) >> 1) & 1 | ((a1 & 0x1000100010001 | ((a1 & 0x101010101010101) >> 1) & 0x81008100810081) >> 2) & 0x2000000001 | ((a1 & 0x100000001 | ((a1 & 0x101010101010101) >> 1) & 0x80000100800001 | ((a1 & 0x1000100010001 | ((a1 & 0x101010101010101) >> 1) & 0x81008100810081) >> 2) & 0x80402100804021) >> 4) & 0x2000000003 | ((a1 & 1 | ((a1 & 0x101010101010101) >> 1) & 0x80000000000001 | ((a1 & 0x1000100010001 | ((a1 & 0x101010101010101) >> 1) & 0x81008100810081) >> 2) & 0x80402000000001 | ((a1 & 0x100000001 | ((a1 & 0x101010101010101) >> 1) & 0x80000100800001 | ((a1 & 0x1000100010001 | ((a1 & 0x101010101010101) >> 1) & 0x81008100810081) >> 2) & 0x80402100804021) >> 4) & 0x80402010080403) >> 8) & 0x6000000007 | ((a1 & 1 | (
        (a1 & 0x101010101010101) >> 1) & 0x80000000000001 | ((a1 & 0x1000100010001 | ((a1 & 0x101010101010101) >> 1) & 0x81008100810081) >> 2) & 0x80002000000001 | ((a1 & 0x100000001 | ((a1 & 0x101010101010101) >> 1) & 0x80000100800001 | ((a1 & 0x1000100010001 | ((a1 & 0x101010101010101) >> 1) & 0x81008100810081) >> 2) & 0x80402100804021) >> 4) & 0x80002000080003 | ((a1 & 1 | ((a1 & 0x101010101010101) >> 1) & 0x80000000000001 | ((a1 & 0x1000100010001 | ((a1 & 0x101010101010101) >> 1) & 0x81008100810081) >> 2) & 0x80402000000001 | ((a1 & 0x100000001 | ((a1 & 0x101010101010101) >> 1) & 0x80000100800001 | ((a1 & 0x1000100010001 | ((a1 & 0x101010101010101) >> 1) & 0x81008100810081) >> 2) & 0x80402100804021) >> 4) & 0x80402010080403) >> 8) & 0x80006000180007) >> 16) & 0xE00000001F
    return (v2 | ((v2 >> 32) & 0xFF)) & 0xff


def EncodeMorton_12bit(a1, a2):
    a1 &= 0xff
    a2 &= 0xff

    v2 = Pad6Bit(a1)
    return v2 | (2 * (Pad6Bit(a2) & 0xffff))


def EncodeMorton_24bit(a1, a2):
    a1 &= 0xffff
    a2 &= 0xffff

    v2 = Pad12Bit(a1)
    return v2 | (2 * (Pad12Bit(a2) & 0xffffffff))


def EncodeMorton_48bit(a1, a2):
    a1 &= 0xffffffff
    a2 &= 0xffffffff

    v2 = Pad24Bit(a1)
    return v2 | (2 * Pad24Bit(a2))


def hash(a1):
    a1 &= 0xffffffff
    v2 = ((73244475 * (((73244475 * (a1 ^ (a1 >> 16))) & 0xffffffff) ^
          (((73244475 * (a1 ^ (a1 >> 16))) & 0xffffffff) >> 16)) & 0xffffffff) & 0xffffffff)
    return (v2 >> 16) ^ v2

# def hash_rev():


def numberOfSetBits(a1):
    a1 &= 0xffffffff
    return ((16843009 * ((((((a1 - ((a1 >> 1) & 0x55555555)) & 0x33333333) + (((a1 - ((a1 >> 1) & 0x55555555)) >> 2) & 0x33333333)) >> 4) + ((a1 - ((a1 >> 1) & 0x55555555)) & 0x33333333) + (((a1 - ((a1 >> 1) & 0x55555555)) >> 2) & 0x33333333)) & 0xF0F0F0F)) & 0xffffffff) >> 24


def EncodeMorton_9x7bit(a1, a2, a3, a4, a5, a6, a7, a8, a9):
    v9 = Pad7Bit(a1) & 0xffffffffffffffff
    v10 = (((2 * (Pad7Bit(a2) & 0xffffffffffffffff)) &
           0xffffffffffffffff) | v9) & 0xffffffffffffffff
    v11 = (((4 * (Pad7Bit(a3) & 0xffffffffffffffff)) &
           0xffffffffffffffff) | v10) & 0xffffffffffffffff
    v12 = (((8 * (Pad7Bit(a4) & 0xffffffffffffffff)) &
           0xffffffffffffffff) | v11) & 0xffffffffffffffff
    v13 = (((16 * (Pad7Bit(a5) & 0xffffffffffffffff)) &
           0xffffffffffffffff) | v12) & 0xffffffffffffffff
    v14 = (((32 * (Pad7Bit(a6) & 0xffffffffffffffff)) &
           0xffffffffffffffff) | v13) & 0xffffffffffffffff
    v15 = ((((Pad7Bit(a7) & 0xffffffffffffffff) << 6) &
           0xffffffffffffffff) | v14) & 0xffffffffffffffff
    v16 = ((((Pad7Bit(a8) & 0xffffffffffffffff) << 7) &
           0xffffffffffffffff) | v15) & 0xffffffffffffffff
    return (v16 | (((Pad7Bit(a9) & 0xffffffffffffffff) << 8) & 0xffffffffffffffff)) & 0xffffffffffffffff


correct_checksums = [0xcd4f2531, 0x23531b52, 0xc3c978e8, 0x8d5d6f3, 0x23531b52, 0xcd4f2531, 0xc3c978e8, 0x46a636a4, 0x23531b52, 0x9a9f4a63, 0xc3c978e8, 0x23531b52, 0xcd4f2531, 0x23531b52, 0xc3c978e8, 0xc3c978e8, 0xc3c978e8, 0x23531b52, 0xc3c978e8, 0xdfb6d245, 0xc3c978e8, 0xc3c978e8, 0x9a9f4a63, 0x8d5d6f3, 0x8d5d6f3, 0xcd4f2531, 0xc3c978e8, 0x46a636a4, 0xc3c978e8, 0x23531b52, 0x4c8214b, 0x8d5d6f3, 0xc3c978e8, 0x9a9f4a63, 0x23531b52, 0x9a9f4a63, 0xcd4f2531, 0x8d5d6f3, 0xdfb6d245, 0x9a9f4a63, 0x23531b52, 0x23531b52, 0xc3c978e8, 0x8d5d6f3, 0x8d5d6f3, 0x9a9f4a63, 0xcd4f2531, 0x8d5d6f3, 0x4c8214b, 0xc3c978e8, 0x4c8214b, 0x8d5d6f3, 0x8d5d6f3, 0x4c8214b, 0x9a9f4a63, 0xc3c978e8, 0x9a9f4a63, 0xc3c978e8, 0x23531b52, 0xcd4f2531, 0xc3c978e8, 0x8d5d6f3, 0x46a636a4, 0x9a9f4a63, 0xcd4f2531, 0x23531b52, 0x8d5d6f3, 0xdfb6d245, 0xc3c978e8, 0xcd4f2531, 0xc3c978e8, 0x9a9f4a63, 0x23531b52, 0x23531b52, 0x9a9f4a63, 0xcd4f2531, 0x23531b52, 0xcd4f2531, 0xcd4f2531, 0xc3c978e8, 0x23531b52, 0x4c8214b, 0x9a9f4a63, 0x8d5d6f3, 0x9a9f4a63, 0x8d5d6f3, 0x9a9f4a63, 0x8d5d6f3, 0x23531b52, 0x8d5d6f3, 0xc3c978e8, 0x66a79298, 0x8d5d6f3, 0x9a9f4a63, 0x23531b52, 0x23531b52, 0xcd4f2531, 0xc3c978e8, 0xc3c978e8, 0x9a9f4a63, 0x4c8214b, 0x9a9f4a63, 0x9a9f4a63, 0xdfb6d245, 0xc3c978e8, 0xdfb6d245, 0x23531b52, 0xc3c978e8, 0xcd4f2531, 0x23531b52, 0x8d5d6f3, 0x9a9f4a63, 0x4c8214b, 0x9a9f4a63, 0x4c8214b, 0xc3c978e8, 0x8d5d6f3, 0x9a9f4a63, 0x8d5d6f3, 0x9a9f4a63, 0xc3c978e8, 0xc3c978e8, 0x4c8214b, 0x9a9f4a63, 0x8d5d6f3, 0x4c8214b, 0x8d5d6f3, 0x23531b52, 0x8d5d6f3, 0x9a9f4a63, 0xc3c978e8, 0xc3c978e8, 0x46a636a4, 0x4c8214b, 0x8d5d6f3, 0x9a9f4a63, 0xc3c978e8, 0x8d5d6f3, 0x23531b52, 0xc3c978e8, 0xc3c978e8, 0x23531b52, 0x9a9f4a63, 0x4c8214b, 0x9a9f4a63, 0x8d5d6f3, 0x9a9f4a63, 0x9a9f4a63, 0x9a9f4a63, 0xc3c978e8, 0x23531b52, 0x4c8214b, 0x9a9f4a63, 0xc3c978e8, 0x9a9f4a63, 0x9a9f4a63, 0x8d5d6f3, 0x4c8214b, 0xa085b4c, 0xc3c978e8, 0x4c8214b, 0x46a636a4, 0x9a9f4a63, 0xc3c978e8, 0x9a9f4a63, 0x4c8214b,
                     0x23531b52, 0x9a9f4a63, 0x4c8214b, 0x8d5d6f3, 0x9a9f4a63, 0x46a636a4, 0x46a636a4, 0x9a9f4a63, 0xcd4f2531, 0x9a9f4a63, 0x4c8214b, 0xc3c978e8, 0x4c8214b, 0x8d5d6f3, 0xc3c978e8, 0xc3c978e8, 0x8d5d6f3, 0x9a9f4a63, 0x46a636a4, 0xc3c978e8, 0x23531b52, 0xc3c978e8, 0x8d5d6f3, 0x23531b52, 0x4c8214b, 0x4c8214b, 0x4c8214b, 0xc3c978e8, 0xc3c978e8, 0xcd4f2531, 0x9a9f4a63, 0xc3c978e8, 0x8d5d6f3, 0x8d5d6f3, 0x9a9f4a63, 0x9a9f4a63, 0x9a9f4a63, 0x8d5d6f3, 0xc3c978e8, 0xc3c978e8, 0xc3c978e8, 0x9a9f4a63, 0x9a9f4a63, 0x4c8214b, 0x9a9f4a63, 0xc3c978e8, 0xcd4f2531, 0x23531b52, 0x9a9f4a63, 0x9a9f4a63, 0x8d5d6f3, 0xc3c978e8, 0x8d5d6f3, 0xc3c978e8, 0xcd4f2531, 0x8d5d6f3, 0xc3c978e8, 0x9a9f4a63, 0x4c8214b, 0x8d5d6f3, 0x4c8214b, 0x46a636a4, 0x9a9f4a63, 0xcd4f2531, 0x23531b52, 0x9a9f4a63, 0xcd4f2531, 0xc3c978e8, 0x4c8214b, 0x8d5d6f3, 0xc3c978e8, 0x9a9f4a63, 0xa085b4c, 0xc3c978e8, 0xc3c978e8, 0x9a9f4a63, 0xcd4f2531, 0x4c8214b, 0x23531b52, 0xcd4f2531, 0x4c8214b, 0x8d5d6f3, 0xa085b4c, 0xc3c978e8, 0x46a636a4, 0x8d5d6f3, 0xc3c978e8, 0x9a9f4a63, 0xc3c978e8, 0xcd4f2531, 0x8d5d6f3, 0x4c8214b, 0x23531b52, 0x8d5d6f3, 0xcd4f2531, 0x9a9f4a63, 0x8d5d6f3, 0x4c8214b, 0x9a9f4a63, 0x8d5d6f3, 0x8d5d6f3, 0x46a636a4, 0x9a9f4a63, 0x46a636a4, 0xc3c978e8, 0xcd4f2531, 0xc3c978e8, 0x4c8214b, 0x23531b52, 0x8d5d6f3, 0x23531b52, 0x8d5d6f3, 0x8d5d6f3, 0xc3c978e8, 0x23531b52, 0x8d5d6f3, 0x9a9f4a63, 0x4c8214b, 0x8d5d6f3, 0x23531b52, 0x8d5d6f3, 0x9a9f4a63, 0x8d5d6f3, 0xc3c978e8, 0x8d5d6f3, 0x9a9f4a63, 0x9a9f4a63, 0x8d5d6f3, 0x4c8214b, 0x8d5d6f3, 0x4c8214b, 0x4c8214b, 0xc3c978e8, 0x8d5d6f3, 0x9a9f4a63, 0x9a9f4a63, 0x23531b52, 0x8d5d6f3, 0x9a9f4a63, 0x9a9f4a63, 0x23531b52, 0x8d5d6f3, 0xc3c978e8, 0x46a636a4, 0x4c8214b, 0x8d5d6f3, 0x46a636a4, 0xc3c978e8, 0x23531b52, 0x8d5d6f3, 0x23531b52, 0x23531b52, 0x9a9f4a63, 0x8d5d6f3, 0xc3c978e8, 0x9a9f4a63, 0xc3c978e8, 0x23531b52, 0xcd4f2531, 0x4c8214b, 0xcd4f2531, 0x9a9f4a63, 0x4c8214b, 0x4c8214b, 0x8d5d6f3, 0x4c8214b, 0xc3c978e8, 0xa085b4c, 0xc3c978e8]
correct = [0x22640aba57200, 0x8004479d42852, 0x880054948c092, 0x8a41420193a02, 0x400541d1e04050, 0x4821117a352810, 0x4a0044c8404a12, 0x4a245518302a90, 0x4a24557b20d892, 0x4a2650e3796050, 0x10a01442864e2d0, 0x108a505e86d6802, 0x108a50451e1c880, 0x108a505f3ec4010, 0x108a70169e13012, 0x108a7011af138d0, 0x108860412910010, 0x1422700d0b40812, 0x142865141e590c0, 0x142a44551dce092, 0x148a455682d2000, 0x14a2545a205aa92, 0x400a0550a055212, 0x402a1044bec02c2, 0x408250471c01280, 0x4088145fb0d1852, 0x408834010dc50c0, 0x4088211f1a83012, 0x50227401a7400c2, 0x50202007aa948c0, 0x500835170e80042, 0x44a071423453280, 0x448a30420e53000, 0x442a601ba382a52, 0x4422751ca9ddad0, 0x442045472a068c0, 0x442810491c9b012, 0x448245568915880, 0x44a2044c9fde000, 0x500054449210290, 0x502044461b93242, 0x548851463309a82, 0x54825446b34e012, 0x5482105ba4cb042, 0x548230008d5c852, 0x548230018dcf292, 0x548261528b93800, 0x54807559b9928d0, 0x542a4d162197a02, 0x54801913325ba90, 0x548848189197012, 0x54a8614b1acb202, 0x1002a31432d18890, 0x1008074499f8b090, 0x54a8304b2d578c0, 0x540a75590c45a40, 0x54023543b083ad0, 0x50826453af42010, 0x1048a00422488082, 0x10488015436c0082, 0x1048235023e1b840, 0x104822401abc48c2, 0x1048071423b4e252, 0x10480714f370e090, 0x104821d022adead2, 0x1048a5d190b072d0, 0x104a81d0d074a850, 0x1102219079e8f2d2, 0x110884c1bb8c0212, 0x1108a61051c988c2, 0x11020650f2100800, 0x104a824071b45812, 0x10420700d1893a50, 0x10402750f19df080, 0x100a8600d00128c0, 0x14088401fb31d250, 0x14082101fb75b802, 0x114aa544c324f200, 0x140000546a19e842, 0x14000515ba2972c2, 0x1400071099100a42, 0x114aa740731408c0, 0x114a82017160ea10, 0x1142230402f4c850, 0x11408705a135f240, 0x1140a654614c0a80, 0x1148830563bd5a52, 0x114a831519a56080, 0x14002355f03950d2, 0x14008091e8edd210, 0x1400a08032b172d2, 0x140821852bc00050, 0x144000c449118242, 0x1500001461ed8290, 0x144aa154b288c082, 0x144aa350001cd880, 0x144aa7016be07840, 0x1500231071e41ad2, 0x150026452beccad2, 0x144aa58039586a52, 0x150024c17a053a42, 0x150024c173551a12, 0x150a25150a45f2d0, 0x154005558b45c802, 0x15422005aa558842, 0x154880058b8dd252, 0x800001046854aac0, 0x80020004e175f2c2, 0x800280544931f000, 0x8008a054c3303a00, 0x80482541a1c5d2d2, 0x8048210038a542c0, 0x80480114aa697840, 0x8042a015b3917a52, 0x804283502048a0c0, 0x8040a310f8d91240, 0x8040a314221110d2, 0x8040a644ba291890, 0x80420615197c2892, 0x804aa254fbf8a8d0, 0x8102a20478a938d2, 0x810a031539f55250, 0x81420701f81d7ad0, 0x814226501230ba12, 0x814003412855cac0, 0x810801047a995250, 0x8100a105137dea90, 0x814aa454f1a5d840, 0x814aa21028c50252, 0x814a8351c16c80d0, 0x814a2711f25cd250, 0x814a8245a234bac2, 0x814a2715f195d090, 0x814a80c189f828c0, 0x840082549b2d7a50, 0x840203459138a0c0, 0x84088644d961aa00, 0x844087047b200a90, 0x8440a65453248a50, 0x8502a14533580092, 0x85020414d0e5aa40, 0x844aa1055bfca8c2, 0x8448a6009814ca52, 0x8448a60408a56ad0, 0x844a8314b864b210, 0x85020304b2293842, 0x850803143b6dd212, 0x850a0655a1a97092, 0x85088711dad17a12, 0x8502271050a0b880, 0x844aa30050451ac0, 0x8542a005195db8c0, 0x8542a310022c9892, 0x8542a310b9c8d850, 0x8548260401907080, 0x854883556288f010, 0x854a05d0088d1a12, 0x854a2180c3c91a52, 0x854a859409a96052, 0x9000219468cdc212, 0x90020584302cb252, 0x900800d5e0ac2090, 0x90402494e9a49ac0, 0x904201c5a829b802, 0x9040a245b2a40280, 0x900a0744d3e8b2c2, 0x900001c029517282, 0x854024d08325ca92,
           0x850a208121fc4810, 0x904a0515b26d8812, 0x904800459b3de810, 0x9040871022a1d0c0, 0x9042a251710d0812, 0x904206516838a290, 0x904222005115c050, 0x90482344a38930c0, 0x904a0715eae99a42, 0x910202059a1532d0, 0x9108065542fdf042, 0x910a2214a03c58d0, 0x910a221058b4f052, 0x910282503bbc9852, 0x904a82109b2412d2, 0x904a8455b9f8c2d2, 0x9100251598492a42, 0x91088414f0f52052, 0x91482545385998d2, 0x91482545710492c2, 0x91488250c36de0d2, 0x9148a7013ac000d2, 0x914887150b09f280, 0x9148871568412290, 0x914a231480d42240, 0x94002215299cfa52, 0x9400a30508a91ac2, 0x9408870528981050, 0x940a230589cc5212, 0x940a0445b0703092, 0x9440a405100dc292, 0x94428005b9fcc8d0, 0x944884559a6d0852, 0x944a2404f21142d2, 0x9500241472cd1840, 0x9508a410f32c7ac0, 0x950885558038c840, 0x95088554b3003202, 0x95088445da497ac2, 0x950887509075e850, 0x9508a301dbc11210, 0x9508a745e999f850, 0x9540260548056000, 0x9542a354cac4a892, 0x95488610faa94250, 0x954a0700985032c2, 0x9542860009d18292, 0x950aa4445b513ac2, 0x20a75423b48880, 0x20a640f855ba90, 0x22260042397850, 0x2a045473f45052, 0x2aa05552306240, 0x608310a93d4a02, 0x622351c0388850, 0x62a3105204ea92, 0x62a31039b98a40, 0x6a044572b89842, 0x6aa2410204d842, 0x12002114ae010c0, 0x12222117a910282, 0x1228315298c82d0, 0x12a24057b4d32d2, 0x16002014bb03090, 0x160020113c0b0c2, 0x12aa214e2d42082, 0x12aa214b134a812, 0x1602741da91f0d2, 0x16803552b74dac2, 0x16a86544b7c5292, 0x42883048301a280, 0x4282641b07d6212, 0x4288610033c4050, 0x4602150a944da42, 0x468805071794ad0, 0x46a24415acc12c0, 0x5200044e35d7a02, 0x5222504f1e19ad0, 0x52a2740e0bcd090, 0x5602751192d18d0, 0x56203517a69d002, 0x562265501008280, 0x52a8710415d8a90, 0x528835109159840, 0x5208641a8f070d2, 0x5202211eb05d8c2, 0x46a8300d1dd1a40, 0x4688255a3acd2c0, 0x462a6556a442852, 0x4222745a8250ad0, 0x420a3446bc4fa92, 0x460814123a1fa82, 0x46205416b91e010, 0x56aa1445a453012, 0x56aa210290c1ad0, 0x56a8700600dea92, 0x10200200704152c2, 0x10208255a09cb810, 0x102206544290c282, 0x102a865582498242, 0x10602711394ca802, 0x10602710b97190c2, 0x1060a21152d138c0, 0x10620645a3b8f052, 0x10680215a0a9ea10, 0x106a02448b0502c0, 0x106a875139187802, 0x106aa741a8892a82, 0x1120060089c18850, 0x11602455d2f84010, 0x1160875062d1fa82, 0x112aa600d9510a40, 0x112a2314c80c0a82, 0x11228241d9248a10, 0x11222601bad46a80, 0x1122260109b060c0, 0x1128a2404870f050, 0x11688500516daa10, 0x116a055429a87ad0, 0x116a25459248a882, 0x116a8405f2ac4ad0, 0x116aa701c8c402d0, 0x1420220153397a00, 0x142023140ab00a92, 0x14202314c1851842, 0x1420275443f1e0c0, 0x14208615eb14ea52, 0x142827054a9c98c2, 0x142a030542544280, 0x142aa65520e958c2, 0x14608710500132c2, 0x142aa651a2003252, 0x1428224002a5d0c2, 0x14202750ab94ca10, 0x1560a64548f04a00, 0x1560071439743a02, 0x1528264419ecf240, 0x15228715e3dc5810, 0x1520a3419294e0d2, 0x152223019a78a852, 0x1528861098889050, 0x152a234061a85292, 0x152a234009c57a00, 0x152824451064e0c0, 0x15200545b970f8c0, 0x15602500d3380042, 0x1560a55423398800, 0x1562a145eb6ca800, 0x15688405335c88d0, 0x156a0015f89c2890, 0x156823018b357092, 0x156226006a3d6040, 0x15680641cbf038d2, 0x156aa7111bf5b212, 0x8022865179fc2a92, 0x8022a31428a11ac0, 0x802082044ac42240, 0x156a2645eaccca10, 0x15688254b10d5a00, 0x1568871552381810, 0x1568859162609ac0, 0x156821801b78ca50, 0x156281d1706cf892, 0x156081c5218122c0, 0x156000d5abb11090, 0x152a24d582389002, 0x152a00c461119880]
v25 = [18992711047936, 70388832212080, 74769130078896, 76147692182816, 281836732940880, 353017044767760, 369455654766384, 370834506782096, 370834720444080, 370840847553104, 1213948969440208, 1202112477894176, 1202112631064192, 1202113010663952, 1202118654072880, 1202118994074832, 1200952858542096, 1426419709051952, 1429670232574144, 1430759545459376, 1483539940478976, 1496798627747248, 4509120866650928, 4526760405959136, 4575414371617152, 4578455536634992, 4578461447817920, 4578380350101552, 5648561163010272, 5647101076342464, 5633997140525152, 4873394244917632, 4861020432209920, 4808448750130544, 4804140427890640, 4802966037599936, 4807136516429872, 4856841612201600, 4874154801091072, 5629862614696336, 5647386134092128, 5986091556162976, 5982805923025456, 5982514568058976, 5982520094475888, 5982520633416624, 5982732797516800, 5981719935489232, 5934395213258528, 5981451280047504, 5986050864618032, 6003624277399840, 18037572619388048, 18085139598694544, 6003413826903744, 5916848718810944, 5912175589727696, 5701271249948688, 18371742014652576, 18370646903423136, 18367440607697984, 18367368076920544, 18366600940835696, 18366601881211536, 18367466374420464, 18372140060253136, 18388357958423632, 19159098251172848, 19215392562151728, 19216453160060128, 19158196560331776, 18388258976108080, 18313818805542224, 18297347673414272, 18107041893618880, 22593040875834192, 22589536183639072, 19515595221981952, 22518021988079200, 22518349110483936, 22518355445679456, 19515601999692992, 19514141737244432, 19440544558040656, 19426526148549440, 19427578250069376, 19496619891199856, 19514216713785984, 22519199623318256, 22522435362081552, 22523530668055536, 22589571750559824, 22799526956155232, 23643904695583120, 22893024826770080, 22893030388616832, 22893284055195200, 23645079903866352, 23645300484425712, 22893310187411312, 23645324769860960, 23645324758584624, 23733308585270224, 23925740572624416, 23944067261252704, 24000142292274032, 72057665124390336, 72075188847369184, 72079608048835072, 72133484378594560, 72410898422287344, 72410606611432384, 72409513285164608, 72362166120259440, 72361158101717184, 72344649204140352, 72344650400434416, 72344870268210320, 72356951706375344, 72432560755332304, 73206595184139504, 73271539287427920, 73482914354274256, 73483966107901232, 73465063529629632, 73253934321797968, 73189062956930960, 73558726921670208, 73558440379908464, 73557427126616272, 73554386897685328, 73557356193865184, 73554389037992592, 73557379764851904, 76565624761458512, 76578883334066368, 76636264213304576, 76847421791405456, 76848473974588752, 77710272016679088, 77704968019891520, 76936198735484128, 76918819234596720, 76918820577187792, 76935112261458192, 77704766098545760, 77757546705308464, 77775361968609968, 77762217844842288, 77706142423866496, 76936205112020416, 77991661035445440, 77991739908508848, 77991740794097232, 78040322424576640, 78043436516792848, 78056928930139440, 78057732488465776, 78061311948919408, 90073201802199856, 90089965444749680, 90142419779784848, 90354883207318976, 90371182505286688, 90358993914626432, 90160325948234208, 90072112895925152, 77969999054620592, 77776188482717200, 90441779412321328, 90423856466875920, 90358222129121984,
       90376588111217712, 90371364907405712, 90372168487387728, 90425032767084736, 90441787616447840, 91215496242108880, 91268568468937312, 91286968266985168, 91286966469876336, 91219913388018800, 90445840221014512, 90446125932102640, 91199342864536928, 91272941574000752, 91551199269276912, 91551199387535840, 91554164705448688, 91555586584477936, 91554492916489088, 91554493104165264, 91568511894622528, 94576706843008880, 94581169242934752, 94650713420204112, 94664732399831856, 94663848218073264, 94862842307658672, 94879060462618320, 94932133310202992, 94946405634049008, 95702873663573056, 95777638578724800, 95776626396907072, 95776626977020192, 95776554079002592, 95776633341728336, 95777436697004304, 95777730425445968, 95984352369938944, 96006158163334320, 96058022646416208, 96071280999274976, 96005240781193648, 95795245477043680, 288236249600181376, 288236175382404496, 288249351462755920, 288318636334975600, 288323858976215872, 288516331138811680, 288530642049451088, 288535023156549552, 288535023105000768, 288600107047079008, 288605335428615776, 289356289138100416, 289374981438472608, 289378350166917584, 289445614330157552, 289637759823255696, 289637760209410272, 289449750058963104, 289449750456783920, 289639220912773872, 289708220843118560, 289730417269738416, 292808822307737984, 292805745592603440, 292809030348112464, 293016640819384160, 293090239767676880, 293104803988572608, 293859895499136800, 293878914141048272, 293949305967823504, 294142824430537936, 294159042433567264, 294160349488234880, 293952591286879632, 293934741315767360, 293864574767995632, 293860988615249632, 293107887989296448, 293090250143255488, 293038847851304048, 292753039377925584, 292739570205941680, 293019934815608736, 293033403983778320, 294234897895233584, 294234822126144976, 294234062030231472, 306244783990410208, 306249205291637776, 306262674080416672, 306337441041662304, 306527706293556256, 306527706527090912, 306531760795458752, 306544145003862640, 306596633786373904, 306614238783308224, 306618982937665056, 306620077881595296, 307370958326514768, 307653548542132752, 307656921464627104, 307464417486079296, 307459819183343008, 307392691565053200, 307389650666198912, 307389649788998336, 307446566793009744, 307727260611892496, 307740477785513936, 307741573761750176, 307744786598266832, 307745960674656720, 310749483110276864, 310749557578139056, 310749557959134304, 310749849758651072, 310753062778394480, 310820197074685152, 310836414853219200, 310842139971587808, 311034604465199584, 310842138097097072, 310819868323334880, 310749847827728144, 312161549711968000, 312156108428746016, 311946045808139072, 311896623577239056, 311879867090555632, 311893044070470768, 311949329573234768, 311963429334813616, 311963429148794624, 311946037228556992, 311874638048943808, 312157193236119648, 312161614032585728, 312178927499564032, 312230793641805008, 312243717604316304, 312227295069575856, 312174724567110208, 312226419031547120, 312249564744636720, 360310266161730992, 360311143770262976, 360292379134202176, 312245112941004560, 312230549053869824, 312230875308493840, 312230898459758016, 312227321077319504, 312177864734236336, 312160269730222528, 312155807553587344, 311963667810502688, 311962289018555520]
# 124336 3014656
# x[i] y[i]
# for i in range(335):
#     solver.add(And(x[i] < int(0xFFFFFFFf), y[i] < int(0xFFFFFFF)))

for i in range(335):
    v19 = x[i] >> 8
    v6 = ((16 * x[i]) & 0xFF0 | (y[i] >> 28)) & 0xffff
    v7 = ((y[i] >> 16) & 0xFFF) & 0xffff
    v8 = EncodeMorton_12bit((y[i] & 0xffff) >> 10,
                            (y[i] >> 4) & 0x3F) & 0xffff
    v20 = EncodeMorton_24bit(v8, v7) & 0xffffffff
    v24 = EncodeMorton_48bit(v19, v7)
    solver.add(v25[i] == ((v24 << 12) | v6))
    # print(hex((v24 << 12) | v6))
if solver.check() == sat:
    model = solver.model()
    print("Solution found:")
    # print(model)
    for i in range(335):
        print("(", end="")
        print(model[x[i]].as_long(), end=",")
        print(model[y[i]].as_long(), end=")\n")
else:
    print("No solution found")

# 23717296 70123520
# for i in range(1):
#     v19 = 23717296 >> 8
#     v6 = ((16 * 23717296) & 0xFF0 | (70123520 >> 28)) & 0xffff
#     v7 = ((70123520 >> 16) & 0xFFF) & 0xffff
#     v8 = EncodeMorton_12bit((70123520 & 0xffff) >> 10,
#                             (70123520 >> 4) & 0x3F) & 0xffff
#     v20 = EncodeMorton_24bit(v8, v7) & 0xffffffff
#     v24 = EncodeMorton_48bit(v19, v7)
#     # solver.add(v25[i] == ((v24 << 12) | v6))
#     print(hex((v24 << 12) | v6))

# else:
#     print("No solution found")
# val = [4874154801098752, 91287097114045648, 4578589793528000, 78043565869135888, 90354883209285056, 19216581505762498, 307392820414072080, 310819997174327490, 73554517888985232, 90073201802207506, 311949457918937168, 312243717604316304, 91220041733721170, 90359122765611392, 77991869139807312, 311963557999787264, 18367569458682944, 4807136013113362, 312245242293347600, 306527835140609026, 4509121369975058, 96006287014319250, 77776188986041360, 91555715435462866, 22893309682136402, 77704894442282050, 90446125932110290, 4578509199120402, 77991661033479360, 91554293552509138, 95702873160256576, 95776626898265152, 293019935320898946, 23925741075948546, 23944067764569154, 289637889060395202, 310749686429123986, 312230898963074496, 72362166122233170, 91568640745607488, 312160270235505088, 72057665124390336, 73483043201334736, 73557380268168384, 18366730226921616, 293038977203639378, 22518021986120770, 310749978609643712, 6003542174579904, 5701400100933648, 4861149283194880, 22893024323461250, 77710272014712978, 94932133308236882, 4873523093936512, 4526760405959106, 77757675049052434, 307389779517191552, 312156236774448386, 312230793639838928, 307744786598274512, 311893172917523538, 19515595221989632, 76918949428180432, 311034732810901954, 19121562040576, 1201081206210576, 22522435865405712, 76936198735484098, 311963668311853058, 78056928930139410, 1426548056720402, 19158324906034176, 72432689101034704, 4804269780233680, 76579012181119168, 288318635833632850, 94581298595270082, 293033404489068560, 310842269323930818, 5982514566092866, 76847550137107856, 19514345564778624, 78057732488465746, 72357080553428114, 292805874439663890, 289378479519252944, 4808577597183314, 360292507985187136, 370834506782096, 19427707097122176, 77991868755561618, 91272941072650322, 72409513283206208, 90372296833097808, 5986091556162946, 289639349763766482, 1202113010671632, 294234950973197776, 90441779410355218, 73557485546200514, 22518349108525506, 307389779143307456, 91287094817552466, 1202247845059792, 4802965536257216, 310749611957337344, 310836544205562240, 312178928000914432, 5934395714616578, 72133484378594560, 90358350980114624, 91554622456500624, 95777859777789008, 310842267449432402, 311946037228564672, 307727260106609936, 312174853414170688, 4578455534668882, 22799526956155202, 1429799586875584, 73484094453603602, 289449878909948034, 292808951156756864, 312155808058869904, 5647386134092098, 19496749243542866, 294160478840570240, 5647229422052544, 306619111784725506, 76636392559006976, 90371183006637058, 369455654774034, 312161614030619648, 72361286948769984, 289356418492401856, 307741573759784066, 306544274356205650, 19159097747864018, 307746090028958160, 311962289018555520, 76918947580306770, 72344779249453266, 73554515744745808, 293934870668102720, 293090379495598528, 18107170239321280, 1202248008374290, 293090239262402000, 312227424421918866, 293859895497178370, 312249693595621650, 294234190877291922, 73271668138420560, 307446695642036304, 289708350195461570, 312230677397613824, 73206723529841874, 76565753105202512, 5634125989544002, 306531889646443712, 72410898927577554, 370834720451730, 311879995941548242, 91551199387535810, 360310395010749842, 19514270586270992,
#        76147690216706, 353017044767760, 281836734914640, 76936333457722816, 294159171280627714, 360311272621247936, 95984481722281984, 18371742012686466, 19215392562151698, 23645429836768722, 18388357455107152, 5982648945468498, 288323858976223552, 306337570392031554, 90425161616103616, 306596763138716944, 1496799131063698, 94663848218073234, 94664861752174866, 70388330861650, 23733309088594384, 24000142795598162, 90423856464917520, 73558569230893394, 18370647404773506, 90089964939467090, 293949434816850064, 18297476019124352, 5981451280047504, 22593040875841872, 4856842117491840, 5986051365976082, 90160454293936578, 5648689508712642, 5916977569803584, 312177864732277906, 74769631436946, 23645208251534802, 91215625091127760, 73189062954972560, 1483540441829376, 96005369632178578, 288236378451166336, 96058150992126288, 5981848784508112, 310749976678720784, 91268697821280322, 288516459985872130, 72344777549842752, 94576836195351890, 94879060462626000, 5982862149852160, 78040451275569280, 90441916968783170, 96071409344977346, 76935240607160592, 292809159195172944, 306244912336120258, 310820326427020482, 77762346695834898, 23645324758584594, 72075188847376834, 90376716958270482, 90142420283101328, 77706270771534976, 18372140062226896, 18037700967056528, 73557556476985552, 94946405130740178, 22523530166712786, 95776626473703682, 95776761687438416, 289449878802486290, 6003752623102210, 293861117967592642, 294234897391917074, 307653548542140432, 310753192130737490, 311946174153849152, 289375110289457538, 311963558183840146, 293104803988572608, 312157192730837058, 1430759545467026, 292739699056934290, 306527834872793282, 95777565547989264, 91551199267310802, 72344998611946640, 288530771399820368, 292753168730260944, 306249334643973136, 288600107047078978, 73253933818489168, 307459948030395778, 289445614328191442, 288249480309816400, 1202112129721472, 73465192881972672, 293952720133932432, 94650842772539472, 307371087177499728, 294142953277590736, 306262802931409282, 307464545831781696, 312226548385848530, 1213948969447888, 5982648979126674, 288535151450703168, 312227320572044624, 91199342862570818, 22589572255842384, 94862842305700242, 293878913639697872, 4575413870266752, 288605464780958786, 18367466374428114, 293864704122304722, 1202112979252226, 91554622266866048, 288236303728106896, 95795244973727170, 19515730345395392, 19440673409033296, 312161679066277120, 95776554077044162, 311874638048951488, 72410606110089664, 293108016334998848, 370969694613584, 22589536183639042, 312231004155546640, 307657050315619714, 77969999054628242, 90445968566716882, 95777638073449920, 289730546116798866, 293016640819391810, 90371494257774992, 288535151502259602, 306620207233930626, 18085267944396944, 23643904695583120, 289637889177557136, 22893413409504320, 18366729791828306, 5629862614696336, 22893159235677312, 23645324769860930, 311896752929582096, 73558726420327488, 18313947151244624, 77704967518541120, 78061311948927058, 22519328470378706, 76848602320291152, 5912303933464016, 306614367632327104, 18367496422630594, 19426655500892480, 310749686810119234, 90072112895932802, 77775491320952978, 18388387323784210, 22518483791381826, 72079608048842752, 5982805923033106, 307740477785521616]

# pos = [38,
#        179,
#        26,
#        155,
#        162,
#        69,
#        281,
#        300,
#        132,
#        159,
#        308,
#        317,
#        181,
#        164,
#        153,
#        310,
#        60,
#        36,
#        325,
#        268,
#        22,
#        211,
#        168,
#        189,
#        99,
#        145,
#        183,
#        27,
#        151,
#        188,
#        202,
#        204,
#        259,
#        103,
#        104,
#        232,
#        291,
#        328,
#        113,
#        192,
#        331,
#        106,
#        122,
#        133,
#        63,
#        256,
#        78,
#        293,
#        54,
#        57,
#        32,
#        94,
#        139,
#        200,
#        31,
#        23,
#        146,
#        282,
#        303,
#        316,
#        288,
#        307,
#        77,
#        143,
#        298,
#        0,
#        16,
#        89,
#        141,
#        333,
#        156,
#        17,
#        70,
#        119,
#        34,
#        135,
#        219,
#        194,
#        260,
#        297,
#        43,
#        137,
#        87,
#        157,
#        118,
#        239,
#        229,
#        33,
#        324,
#        7,
#        85,
#        152,
#        185,
#        112,
#        174,
#        41,
#        235,
#        13,
#        262,
#        169,
#        131,
#        79,
#        283,
#        180,
#        15,
#        35,
#        290,
#        296,
#        315,
#        48,
#        109,
#        171,
#        191,
#        209,
#        299,
#        311,
#        285,
#        319,
#        25,
#        92,
#        18,
#        123,
#        233,
#        238,
#        332,
#        40,
#        86,
#        249,
#        29,
#        274,
#        136,
#        163,
#        6,
#        314,
#        114,
#        227,
#        287,
#        271,
#        67,
#        289,
#        334,
#        142,
#        116,
#        130,
#        251,
#        255,
#        74,
#        14,
#        242,
#        318,
#        244,
#        321,
#        263,
#        121,
#        284,
#        236,
#        326,
#        120,
#        134,
#        30,
#        270,
#        110,
#        8,
#        306,
#        187,
#        322,
#        82,
#        3,
#        5,
#        4,
#        150,
#        248,
#        323,
#        210,
#        58,
#        68,
#        98,
#        66,
#        44,
#        220,
#        267,
#        175,
#        272,
#        21,
#        197,
#        196,
#        1,
#        102,
#        105,
#        170,
#        128,
#        59,
#        160,
#        246,
#        73,
#        49,
#        75,
#        37,
#        50,
#        165,
#        28,
#        55,
#        330,
#        2,
#        97,
#        177,
#        126,
#        20,
#        214,
#        216,
#        212,
#        47,
#        301,
#        178,
#        221,
#        115,
#        193,
#        199,
#        46,
#        154,
#        176,
#        213,
#        144,
#        240,
#        264,
#        295,
#        148,
#        101,
#        107,
#        172,
#        161,
#        149,
#        65,
#        52,
#        129,
#        201,
#        90,
#        205,
#        207,
#        234,
#        51,
#        253,
#        261,
#        277,
#        294,
#        304,
#        228,
#        309,
#        243,
#        313,
#        19,
#        258,
#        269,
#        208,
#        186,
#        117,
#        222,
#        257,
#        265,
#        225,
#        125,
#        280,
#        230,
#        218,
#        12,
#        124,
#        250,
#        195,
#        276,
#        247,
#        266,
#        279,
#        320,
#        10,
#        45,
#        224,
#        329,
#        184,
#        91,
#        198,
#        245,
#        24,
#        226,
#        64,
#        252,
#        11,
#        190,
#        217,
#        215,
#        81,
#        83,
#        302,
#        206,
#        312,
#        111,
#        254,
#        9,
#        76,
#        327,
#        278,
#        167,
#        182,
#        203,
#        237,
#        241,
#        173,
#        223,
#        275,
#        53,
#        93,
#        231,
#        96,
#        62,
#        39,
#        95,
#        100,
#        305,
#        127,
#        72,
#        140,
#        158,
#        88,
#        138,
#        56,
#        273,
#        61,
#        84,
#        292,
#        166,
#        147,
#        71,
#        80,
#        108,
#        42,
#        286]
# ans = [19121562040576, 70388330861650, 74769631436946, 76147690216706, 281836734914640, 353017044767760, 369455654774034, 370834506782096, 370834720451730, 370969694613584, 1213948969447888, 1202112979252226, 1202112129721472, 1202113010671632, 1202248008374290, 1202247845059792, 1201081206210576, 1426548056720402, 1429799586875584, 1430759545467026, 1483540441829376, 1496799131063698, 4509121369975058, 4526760405959106, 4575413870266752, 4578455534668882, 4578589793528000, 4578509199120402, 5648689508712642, 5647229422052544, 5634125989544002, 4873523093936512, 4861149283194880, 4808577597183314, 4804269780233680, 4802965536257216, 4807136013113362, 4856842117491840, 4874154801098752, 5629862614696336, 5647386134092098, 5986091556162946, 5982805923033106, 5982514566092866, 5982648945468498, 5982648979126674, 5982862149852160, 5981848784508112, 5934395714616578, 5981451280047504, 5986051365976082, 6003752623102210, 18037700967056528, 18085267944396944, 6003542174579904, 5916977569803584, 5912303933464016, 5701400100933648, 18371742012686466, 18370647404773506, 18367569458682944, 18367496422630594, 18366729791828306, 18366730226921616, 18367466374428114, 18372140062226896, 18388357455107152, 19159097747864018, 19215392562151698, 19216581505762498, 19158324906034176, 18388387323784210, 18313947151244624, 18297476019124352, 18107170239321280, 22593040875841872, 22589536183639042, 19515595221989632, 22518021986120770, 22518349108525506, 22518483791381826, 19515730345395392, 19514270586270992, 19440673409033296, 19426655500892480, 19427707097122176, 19496749243542866, 19514345564778624, 22519328470378706, 22522435865405712, 22523530166712786, 22589572255842384, 22799526956155202, 23643904695583120, 22893024323461250, 22893159235677312, 22893413409504320, 23645208251534802, 23645429836768722, 22893309682136402, 23645324769860930, 23645324758584594, 23733309088594384, 23925741075948546, 23944067764569154, 24000142795598162, 72057665124390336, 72075188847376834, 72079608048842752, 72133484378594560, 72410898927577554, 72410606110089664, 72409513283206208, 72362166122233170, 72361286948769984, 72344777549842752, 72344779249453266, 72344998611946640, 72357080553428114, 72432689101034704, 73206723529841874, 73271668138420560, 73483043201334736, 73484094453603602, 73465192881972672, 73253933818489168, 73189062954972560, 73558726420327488, 73558569230893394, 73557556476985552, 73554515744745808, 73557485546200514, 73554517888985232, 73557380268168384, 76565753105202512, 76579012181119168, 76636392559006976, 76847550137107856, 76848602320291152, 77710272014712978, 77704967518541120, 76936198735484098, 76918947580306770, 76918949428180432, 76935240607160592, 77704894442282050, 77757675049052434, 77775491320952978, 77762346695834898, 77706270771534976, 76936333457722816, 77991661033479360, 77991868755561618, 77991869139807312, 78040451275569280, 78043565869135888, 78056928930139410, 78057732488465746, 78061311948927058, 90073201802207506, 90089964939467090, 90142420283101328, 90354883209285056, 90371183006637058, 90359122765611392, 90160454293936578, 90072112895932802, 77969999054628242, 77776188986041360, 90441779410355218, 90423856464917520, 90358350980114624,
#        90376716958270482, 90371494257774992, 90372296833097808, 90425161616103616, 90441916968783170, 91215625091127760, 91268697821280322, 91287097114045648, 91287094817552466, 91220041733721170, 90445968566716882, 90446125932110290, 91199342862570818, 91272941072650322, 91551199267310802, 91551199387535810, 91554293552509138, 91555715435462866, 91554622266866048, 91554622456500624, 91568640745607488, 94576836195351890, 94581298595270082, 94650842772539472, 94664861752174866, 94663848218073234, 94862842305700242, 94879060462626000, 94932133308236882, 94946405130740178, 95702873160256576, 95777638073449920, 95776626898265152, 95776626473703682, 95776554077044162, 95776761687438416, 95777565547989264, 95777859777789008, 95984481722281984, 96006287014319250, 96058150992126288, 96071409344977346, 96005369632178578, 95795244973727170, 288236378451166336, 288236303728106896, 288249480309816400, 288318635833632850, 288323858976223552, 288516459985872130, 288530771399820368, 288535151502259602, 288535151450703168, 288600107047078978, 288605464780958786, 289356418492401856, 289375110289457538, 289378479519252944, 289445614328191442, 289637889177557136, 289637889060395202, 289449878909948034, 289449878802486290, 289639349763766482, 289708350195461570, 289730546116798866, 292808951156756864, 292805874439663890, 292809159195172944, 293016640819391810, 293090239262402000, 293104803988572608, 293859895497178370, 293878913639697872, 293949434816850064, 294142953277590736, 294159171280627714, 294160478840570240, 293952720133932432, 293934870668102720, 293864704122304722, 293861117967592642, 293108016334998848, 293090379495598528, 293038977203639378, 292753168730260944, 292739699056934290, 293019935320898946, 293033404489068560, 294234897391917074, 294234950973197776, 294234190877291922, 306244912336120258, 306249334643973136, 306262802931409282, 306337570392031554, 306527835140609026, 306527834872793282, 306531889646443712, 306544274356205650, 306596763138716944, 306614367632327104, 306619111784725506, 306620207233930626, 307371087177499728, 307653548542140432, 307657050315619714, 307464545831781696, 307459948030395778, 307392820414072080, 307389779517191552, 307389779143307456, 307446695642036304, 307727260106609936, 307740477785521616, 307741573759784066, 307744786598274512, 307746090028958160, 310749611957337344, 310749686429123986, 310749686810119234, 310749978609643712, 310753192130737490, 310820326427020482, 310836544205562240, 310842269323930818, 311034732810901954, 310842267449432402, 310819997174327490, 310749976678720784, 312161679066277120, 312156236774448386, 311946174153849152, 311896752929582096, 311879995941548242, 311893172917523538, 311949457918937168, 311963558183840146, 311963557999787264, 311946037228564672, 311874638048951488, 312157192730837058, 312161614030619648, 312178928000914432, 312230793639838928, 312243717604316304, 312227424421918866, 312174853414170688, 312226548385848530, 312249693595621650, 360310395010749842, 360311272621247936, 360292507985187136, 312245242293347600, 312230677397613824, 312231004155546640, 312230898963074496, 312227320572044624, 312177864732277906, 312160270235505088, 312155808058869904, 311963668311853058, 311962289018555520]
# tmp = [0] * (335*8)
# # print(len(ans))
# # print(len(pos))
# for i in range(len(pos)):
#     tmp[pos[i]] = val[i]

# # print(hex(19121562040576))

# print("11 64 15 e9 b9 00"[::-1])
