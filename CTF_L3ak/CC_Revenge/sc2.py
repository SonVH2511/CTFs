_sbox = [0xFF, 0xE4, 0xFD, 0x9A, 0x4B, 0xE0, 0x69, 0x36, 0xD7, 0x1C,
         0x15, 0x12, 0xA3, 0x98, 0x01, 0x2E, 0xAF, 0x54, 0x2D, 0x8A,
         0xFB, 0x50, 0x99, 0x26, 0x87, 0x8C, 0x45, 0x02, 0x53, 0x08,
         0x31, 0x1E, 0x5F, 0xC4, 0x5D, 0x7A, 0xAB, 0xC0, 0xC9, 0x16,
         0x37, 0xFC, 0x75, 0xF2, 0x03, 0x78, 0x61, 0x0E, 0x0F, 0x34,
         0x8D, 0x6A, 0x5B, 0x30, 0xF9, 0x06, 0xE7, 0x6C, 0xA5, 0xE2,
         0xB3, 0xE8, 0x91, 0xFE, 0xBF, 0xA4, 0xBD, 0x5A, 0x0B, 0xA0,
         0x29, 0xF6, 0x97, 0xDC, 0xD5, 0xD2, 0x63, 0x58, 0xC1, 0xEE,
         0x6F, 0x14, 0xED, 0x4A, 0xBB, 0x10, 0x59, 0xE6, 0x47, 0x4C,
         0x05, 0xC2, 0x13, 0xC8, 0xF1, 0xDE, 0x1F, 0x84, 0x1D, 0x3A,
         0x6B, 0x80, 0x89, 0xD6, 0xF7, 0xBC, 0x35, 0xB2, 0xC3, 0x38,
         0x21, 0xCE, 0xCF, 0xF4, 0x4D, 0x2A, 0x1B, 0xF0, 0xB9, 0xC6,
         0xA7, 0x2C, 0x65, 0xA2, 0x73, 0xA8, 0x51, 0xBE, 0x7F, 0x64,
         0x7D, 0x1A, 0xCB, 0x60, 0xE9, 0xB6, 0x57, 0x9C, 0x95, 0x92,
         0x23, 0x18, 0x81, 0xAE, 0x2F, 0xD4, 0xAD, 0x0A, 0x7B, 0xD0,
         0x19, 0xA6, 0x07, 0x0C, 0xC5, 0x82, 0xD3, 0x88, 0xB1, 0x9E,
         0xDF, 0x44, 0xDD, 0xFA, 0x2B, 0x40, 0x49, 0x96, 0xB7, 0x7C,
         0xF5, 0x72, 0x83, 0xF8, 0xE1, 0x8E, 0x8F, 0xB4, 0x0D, 0xEA,
         0xDB, 0xB0, 0x79, 0x86, 0x67, 0xEC, 0x25, 0x62, 0x33, 0x68,
         0x11, 0x7E, 0x3F, 0x24, 0x3D, 0xDA, 0x8B, 0x20, 0xA9, 0x76,
         0x17, 0x5C, 0x55, 0x52, 0xE3, 0xD8, 0x41, 0x6E, 0xEF, 0x94,
         0x6D, 0xCA, 0x3B, 0x90, 0xD9, 0x66, 0xC7, 0xCC, 0x85, 0x42,
         0x93, 0x48, 0x71, 0x5E, 0x9F, 0x04, 0x9D, 0xBA, 0xEB, 0x00,
         0x09, 0x56, 0x77, 0x3C, 0xB5, 0x32, 0x43, 0xB8, 0xA1, 0x4E,
         0x4F, 0x74, 0xCD, 0xAA, 0x9B, 0x70, 0x39, 0x46, 0x27, 0xAC,
         0xE5, 0x22, 0xF3, 0x28, 0xD1, 0x3E]
_round_keys = [0x0BAD1E1101, 0x0DEADBEEF00000000, 0x5D68FD66E00, 0x56DF778000000000, 0x175A3F59B5EFB58, 0x0DDE0000000000000, 0x7EB36BDF6BC552EF, 0x2EB4, 0x0F6BC552EF0DEEEEF, 0x2EB47EB36BD, 0x86F7777800DEF9B5, 0x3F59B5EFB5E2A977, 0x7BE6D4FD66095038, 0x8AA5DE1BDDDDE003, 0x0A071154BBCE95554, 0x0C006F7CDA9FACC12, 0x54C006F7CD771423, 0x12A071154BBCE955, 0x8950388AA5009A45, 0x0AA60037BE6BB8A11, 0x9800DEF9AE3C6A8D, 0x540E22A94026916A, 0x0C4552804D2F3BDEF, 0x1BDF35C78D51AA81, 0x5C78D51AA8C2ABBD, 0x804D2F3BDEF1BDF3, 0x0DEF78DEF9A3D2847, 0x0D546155DEC026979, 0x0B009A5E77B00D951, 0x68F4A11F55185577, 0x30AAEF6013952019, 0x1B2A2D1E9423EAA,
               0x3EAA30AAEFBEFD7A, 0x201901B2A2D1E942, 0x0A11F551855A93191, 0x0BD100C80D95168F4, 0x2847D54615B4A28B, 0x6F44032036545A3D, 0x8FAA8C2B64ABF82, 0x0E8806406CA8B47A5, 0x0AA8C2B64AB26C067, 0x6406CA8B47A508F, 0x5B25593603E6DCEC, 0x6545A3D2847D5461, 0x0D80F9B73B14BF860, 0x4A11F551856C9564, 0x6297F0C094FD044C, 0x0AD92AC9B01F36E7, 0x0FD044C0AD9F4275F, 0x1F36E76297F0C094, 0x13AF8F9B736FA517, 0x604A7E8226056CFA, 0x45D8129FA0576FB4, 0x3E84EBE3E6DCDBE9, 0x87D09D7C7C057592, 0x28BB0253F40AEDF6, 0x8BB0253F40703187, 0x7D09D7C7C0575922, 0x4EBE3E02BA17FAB2, 0x8129FA03818C3BE8, 0x0E80E0630EF7FD417, 0x0F80AE85FEACA04A7, 0x0BFD594094F0EF2E3, 0x61DEFFA82FF015D0]
enc = [151, 226, 254, 154, 221, 99, 201, 203, 133, 30, 200, 90, 45, 224, 113,
       27, 30, 245, 154, 238, 76, 230, 80, 53, 209, 187, 254, 54, 25, 147, 120, 246]
# with open('E:\\CTF\\KCSC\\CTFs\\CTF_L3ak\\CC\\rickroll.bin', 'rb') as file:
#     data = file.read()
# for i in range(len(data)):
#     enc.append(data[i])

# print(len(enc))
__enc = [0x97e2fe9add63c9cb, 0x851ec85a2de0711b,
         0x1ef59aee4ce65035, 0xd1bbfe36199378f6]

# __tmp = 0
# for i in range(len(enc)):
#     if i % 8 == 0 and i != 0:
#         __enc.append(__tmp)
#         __tmp = 0
#     __tmp <<= 8
#     __tmp += enc[i]
#     if i == 31:
#         __enc.append(__tmp)
# for i in __enc:
#     print(hex(i))
# # print(__enc)

ans = 0

for k in range(2):
    cnt = 0
    comp = [__enc[k*2+1], __enc[k*2]]
    for i in range(31, -1, -1):
        tmp1 = comp[cnt+1] ^ _round_keys[i*2] ^ 0xDEADBEEF00000000
        tmp2 = 0
        cnt1 = 0
        while (tmp1 != 0):
            _tmp = _sbox[tmp1 & 0xff]
            tmp1 >>= 8
            tmp2 += (_tmp << cnt1)
            cnt1 += 8
        cur = comp[cnt] ^ _round_keys[i*2+1] ^ tmp2 ^ 0xDEADBEEF00000000
        print(hex(cur))
        comp.append(cur)
        print()
        cnt += 1
    ans <<= 64
    ans += comp[-1]
    ans <<= 64
    ans += comp[-2]

print(hex(ans))
# 0x4c33414b7b523376656e67655f30665f5468335f536368316666797d04040404
# L3AK{R3venge_0f_Th3_Sch1ffy}
